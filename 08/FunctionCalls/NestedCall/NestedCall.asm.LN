// Initialize Stack
@256        // 0
D=A        // 1
@SP        // 2
M=D        // 3
// call Sys.init 0
@Sys$ret.0        // 4
D=A        // 5
@SP        // 6
A=M        // 7
M=D        // 8
@SP        // 9
M=M+1        // 10
@LCL        // 11
D=M        // 12
@SP        // 13
A=M        // 14
M=D        // 15
@SP        // 16
M=M+1        // 17
@ARG        // 18
D=M        // 19
@SP        // 20
A=M        // 21
M=D        // 22
@SP        // 23
M=M+1        // 24
@THIS        // 25
D=M        // 26
@SP        // 27
A=M        // 28
M=D        // 29
@SP        // 30
M=M+1        // 31
@THAT        // 32
D=M        // 33
@SP        // 34
A=M        // 35
M=D        // 36
@SP        // 37
M=M+1        // 38
@SP        // 39
D=M        // 40
@5        // 41
D=D-A        // 42
@0        // 43
D=D-A        // 44
@ARG        // 45
M=D        // 46
@SP        // 47
D=M        // 48
@LCL        // 49
M=D        // 50
@Sys.init        // 51
0;JMP        // 52
(Sys$ret.0)
// function Sys.init 0
(Sys.init)
// push constant 4000
@4000        // 53
D=A        // 54
@SP        // 55
A=M        // 56
M=D        // 57
@SP        // 58
M=M+1        // 59
// pop pointer 0
@THIS        // 60
D=A        // 61
@R13        // 62
M=D        // 63
@SP        // 64
M=M-1        // 65
A=M        // 66
D=M        // 67
@R13        // 68
A=M        // 69
M=D        // 70
// push constant 5000
@5000        // 71
D=A        // 72
@SP        // 73
A=M        // 74
M=D        // 75
@SP        // 76
M=M+1        // 77
// pop pointer 1
@THAT        // 78
D=A        // 79
@R13        // 80
M=D        // 81
@SP        // 82
M=M-1        // 83
A=M        // 84
D=M        // 85
@R13        // 86
A=M        // 87
M=D        // 88
// call Sys.main 0
@Sys$ret.13        // 89
D=A        // 90
@SP        // 91
A=M        // 92
M=D        // 93
@SP        // 94
M=M+1        // 95
@LCL        // 96
D=M        // 97
@SP        // 98
A=M        // 99
M=D        // 100
@SP        // 101
M=M+1        // 102
@ARG        // 103
D=M        // 104
@SP        // 105
A=M        // 106
M=D        // 107
@SP        // 108
M=M+1        // 109
@THIS        // 110
D=M        // 111
@SP        // 112
A=M        // 113
M=D        // 114
@SP        // 115
M=M+1        // 116
@THAT        // 117
D=M        // 118
@SP        // 119
A=M        // 120
M=D        // 121
@SP        // 122
M=M+1        // 123
@SP        // 124
D=M        // 125
@5        // 126
D=D-A        // 127
@0        // 128
D=D-A        // 129
@ARG        // 130
M=D        // 131
@SP        // 132
D=M        // 133
@LCL        // 134
M=D        // 135
@Sys.main        // 136
0;JMP        // 137
(Sys$ret.13)
// pop temp 1
@R5        // 138
D=A        // 139
@1        // 140
D=D+A        // 141
@R13        // 142
M=D        // 143
@SP        // 144
M=M-1        // 145
A=M        // 146
D=M        // 147
@R13        // 148
A=M        // 149
M=D        // 150
// label LOOP
(LOOP)
// goto LOOP
@LOOP        // 151
0;JMP        // 152
// function Sys.main 5
(Sys.main)
@SP        // 153
A=M        // 154
M=0        // 155
A=A+1        // 156
M=0        // 157
A=A+1        // 158
M=0        // 159
A=A+1        // 160
M=0        // 161
A=A+1        // 162
M=0        // 163
A=A+1        // 164
D=A        // 165
@SP        // 166
M=D        // 167
// push constant 4001
@4001        // 168
D=A        // 169
@SP        // 170
A=M        // 171
M=D        // 172
@SP        // 173
M=M+1        // 174
// pop pointer 0
@THIS        // 175
D=A        // 176
@R13        // 177
M=D        // 178
@SP        // 179
M=M-1        // 180
A=M        // 181
D=M        // 182
@R13        // 183
A=M        // 184
M=D        // 185
// push constant 5001
@5001        // 186
D=A        // 187
@SP        // 188
A=M        // 189
M=D        // 190
@SP        // 191
M=M+1        // 192
// pop pointer 1
@THAT        // 193
D=A        // 194
@R13        // 195
M=D        // 196
@SP        // 197
M=M-1        // 198
A=M        // 199
D=M        // 200
@R13        // 201
A=M        // 202
M=D        // 203
// push constant 200
@200        // 204
D=A        // 205
@SP        // 206
A=M        // 207
M=D        // 208
@SP        // 209
M=M+1        // 210
// pop local 1
@LCL        // 211
D=M        // 212
@1        // 213
D=D+A        // 214
@R13        // 215
M=D        // 216
@SP        // 217
M=M-1        // 218
A=M        // 219
D=M        // 220
@R13        // 221
A=M        // 222
M=D        // 223
// push constant 40
@40        // 224
D=A        // 225
@SP        // 226
A=M        // 227
M=D        // 228
@SP        // 229
M=M+1        // 230
// pop local 2
@LCL        // 231
D=M        // 232
@2        // 233
D=D+A        // 234
@R13        // 235
M=D        // 236
@SP        // 237
M=M-1        // 238
A=M        // 239
D=M        // 240
@R13        // 241
A=M        // 242
M=D        // 243
// push constant 6
@6        // 244
D=A        // 245
@SP        // 246
A=M        // 247
M=D        // 248
@SP        // 249
M=M+1        // 250
// pop local 3
@LCL        // 251
D=M        // 252
@3        // 253
D=D+A        // 254
@R13        // 255
M=D        // 256
@SP        // 257
M=M-1        // 258
A=M        // 259
D=M        // 260
@R13        // 261
A=M        // 262
M=D        // 263
// push constant 123
@123        // 264
D=A        // 265
@SP        // 266
A=M        // 267
M=D        // 268
@SP        // 269
M=M+1        // 270
// call Sys.add12 1
@Sys$ret.38        // 271
D=A        // 272
@SP        // 273
A=M        // 274
M=D        // 275
@SP        // 276
M=M+1        // 277
@LCL        // 278
D=M        // 279
@SP        // 280
A=M        // 281
M=D        // 282
@SP        // 283
M=M+1        // 284
@ARG        // 285
D=M        // 286
@SP        // 287
A=M        // 288
M=D        // 289
@SP        // 290
M=M+1        // 291
@THIS        // 292
D=M        // 293
@SP        // 294
A=M        // 295
M=D        // 296
@SP        // 297
M=M+1        // 298
@THAT        // 299
D=M        // 300
@SP        // 301
A=M        // 302
M=D        // 303
@SP        // 304
M=M+1        // 305
@SP        // 306
D=M        // 307
@5        // 308
D=D-A        // 309
@1        // 310
D=D-A        // 311
@ARG        // 312
M=D        // 313
@SP        // 314
D=M        // 315
@LCL        // 316
M=D        // 317
@Sys.add12        // 318
0;JMP        // 319
(Sys$ret.38)
// pop temp 0
@R5        // 320
D=A        // 321
@0        // 322
D=D+A        // 323
@R13        // 324
M=D        // 325
@SP        // 326
M=M-1        // 327
A=M        // 328
D=M        // 329
@R13        // 330
A=M        // 331
M=D        // 332
// push local 0
@0        // 333
D=A        // 334
@LCL        // 335
A=D+M        // 336
D=M        // 337
@SP        // 338
A=M        // 339
M=D        // 340
@SP        // 341
M=M+1        // 342
// push local 1
@1        // 343
D=A        // 344
@LCL        // 345
A=D+M        // 346
D=M        // 347
@SP        // 348
A=M        // 349
M=D        // 350
@SP        // 351
M=M+1        // 352
// push local 2
@2        // 353
D=A        // 354
@LCL        // 355
A=D+M        // 356
D=M        // 357
@SP        // 358
A=M        // 359
M=D        // 360
@SP        // 361
M=M+1        // 362
// push local 3
@3        // 363
D=A        // 364
@LCL        // 365
A=D+M        // 366
D=M        // 367
@SP        // 368
A=M        // 369
M=D        // 370
@SP        // 371
M=M+1        // 372
// push local 4
@4        // 373
D=A        // 374
@LCL        // 375
A=D+M        // 376
D=M        // 377
@SP        // 378
A=M        // 379
M=D        // 380
@SP        // 381
M=M+1        // 382
// add
@SP        // 383
M=M-1        // 384
A=M        // 385
D=M        // 386
A=A-1        // 387
M=M+D        // 388
// add
@SP        // 389
M=M-1        // 390
A=M        // 391
D=M        // 392
A=A-1        // 393
M=M+D        // 394
// add
@SP        // 395
M=M-1        // 396
A=M        // 397
D=M        // 398
A=A-1        // 399
M=M+D        // 400
// add
@SP        // 401
M=M-1        // 402
A=M        // 403
D=M        // 404
A=A-1        // 405
M=M+D        // 406
// return
@LCL        // 407
D=M        // 408
@5        // 409
A=D-A        // 410
D=M        // 411
@R13        // 412
M=D        // 413
@SP        // 414
A=M-1        // 415
D=M        // 416
@ARG        // 417
A=M        // 418
M=D        // 419
@ARG        // 420
D=M        // 421
@SP        // 422
M=D+1        // 423
@LCL        // 424
M=M-1        // 425
A=M        // 426
D=M        // 427
@THAT        // 428
M=D        // 429
@LCL        // 430
M=M-1        // 431
A=M        // 432
D=M        // 433
@THIS        // 434
M=D        // 435
@LCL        // 436
M=M-1        // 437
A=M        // 438
D=M        // 439
@ARG        // 440
M=D        // 441
@LCL        // 442
M=M-1        // 443
A=M        // 444
D=M        // 445
@LCL        // 446
M=D        // 447
@R13        // 448
A=M        // 449
0;JMP        // 450
// function Sys.add12 0
(Sys.add12)
// push constant 4002
@4002        // 451
D=A        // 452
@SP        // 453
A=M        // 454
M=D        // 455
@SP        // 456
M=M+1        // 457
// pop pointer 0
@THIS        // 458
D=A        // 459
@R13        // 460
M=D        // 461
@SP        // 462
M=M-1        // 463
A=M        // 464
D=M        // 465
@R13        // 466
A=M        // 467
M=D        // 468
// push constant 5002
@5002        // 469
D=A        // 470
@SP        // 471
A=M        // 472
M=D        // 473
@SP        // 474
M=M+1        // 475
// pop pointer 1
@THAT        // 476
D=A        // 477
@R13        // 478
M=D        // 479
@SP        // 480
M=M-1        // 481
A=M        // 482
D=M        // 483
@R13        // 484
A=M        // 485
M=D        // 486
// push argument 0
@0        // 487
D=A        // 488
@ARG        // 489
A=D+M        // 490
D=M        // 491
@SP        // 492
A=M        // 493
M=D        // 494
@SP        // 495
M=M+1        // 496
// push constant 12
@12        // 497
D=A        // 498
@SP        // 499
A=M        // 500
M=D        // 501
@SP        // 502
M=M+1        // 503
// add
@SP        // 504
M=M-1        // 505
A=M        // 506
D=M        // 507
A=A-1        // 508
M=M+D        // 509
// return
@LCL        // 510
D=M        // 511
@5        // 512
A=D-A        // 513
D=M        // 514
@R13        // 515
M=D        // 516
@SP        // 517
A=M-1        // 518
D=M        // 519
@ARG        // 520
A=M        // 521
M=D        // 522
@ARG        // 523
D=M        // 524
@SP        // 525
M=D+1        // 526
@LCL        // 527
M=M-1        // 528
A=M        // 529
D=M        // 530
@THAT        // 531
M=D        // 532
@LCL        // 533
M=M-1        // 534
A=M        // 535
D=M        // 536
@THIS        // 537
M=D        // 538
@LCL        // 539
M=M-1        // 540
A=M        // 541
D=M        // 542
@ARG        // 543
M=D        // 544
@LCL        // 545
M=M-1        // 546
A=M        // 547
D=M        // 548
@LCL        // 549
M=D        // 550
@R13        // 551
A=M        // 552
0;JMP        // 553
// Program end
(END)
@END        // 554
0;JMP        // 555
