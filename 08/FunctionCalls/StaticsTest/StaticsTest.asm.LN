// Initialize Stack
@256        // 0
D=A        // 1
@SP        // 2
M=D        // 3
// call Sys.init 0
@Sys$ret.0        // 4
D=A        // 5
@SP        // 6
A=M        // 7
M=D        // 8
@SP        // 9
M=M+1        // 10
@LCL        // 11
D=M        // 12
@SP        // 13
A=M        // 14
M=D        // 15
@SP        // 16
M=M+1        // 17
@ARG        // 18
D=M        // 19
@SP        // 20
A=M        // 21
M=D        // 22
@SP        // 23
M=M+1        // 24
@THIS        // 25
D=M        // 26
@SP        // 27
A=M        // 28
M=D        // 29
@SP        // 30
M=M+1        // 31
@THAT        // 32
D=M        // 33
@SP        // 34
A=M        // 35
M=D        // 36
@SP        // 37
M=M+1        // 38
@SP        // 39
D=M        // 40
@5        // 41
D=D-A        // 42
@0        // 43
D=D-A        // 44
@ARG        // 45
M=D        // 46
@SP        // 47
D=M        // 48
@LCL        // 49
M=D        // 50
@Sys.init        // 51
0;JMP        // 52
(Sys$ret.0)
// function Class1.set 0
(Class1.set)
// push argument 0
@0        // 53
D=A        // 54
@ARG        // 55
A=D+M        // 56
D=M        // 57
@SP        // 58
A=M        // 59
M=D        // 60
@SP        // 61
M=M+1        // 62
// pop static 0
@Class1.0        // 63
D=A        // 64
@R13        // 65
M=D        // 66
@SP        // 67
M=M-1        // 68
A=M        // 69
D=M        // 70
@R13        // 71
A=M        // 72
M=D        // 73
// push argument 1
@1        // 74
D=A        // 75
@ARG        // 76
A=D+M        // 77
D=M        // 78
@SP        // 79
A=M        // 80
M=D        // 81
@SP        // 82
M=M+1        // 83
// pop static 1
@Class1.1        // 84
D=A        // 85
@R13        // 86
M=D        // 87
@SP        // 88
M=M-1        // 89
A=M        // 90
D=M        // 91
@R13        // 92
A=M        // 93
M=D        // 94
// push constant 0
@0        // 95
D=A        // 96
@SP        // 97
A=M        // 98
M=D        // 99
@SP        // 100
M=M+1        // 101
// return
@LCL        // 102
D=M        // 103
@5        // 104
A=D-A        // 105
D=M        // 106
@R13        // 107
M=D        // 108
@SP        // 109
A=M-1        // 110
D=M        // 111
@ARG        // 112
A=M        // 113
M=D        // 114
@ARG        // 115
D=M        // 116
@SP        // 117
M=D+1        // 118
@LCL        // 119
M=M-1        // 120
A=M        // 121
D=M        // 122
@THAT        // 123
M=D        // 124
@LCL        // 125
M=M-1        // 126
A=M        // 127
D=M        // 128
@THIS        // 129
M=D        // 130
@LCL        // 131
M=M-1        // 132
A=M        // 133
D=M        // 134
@ARG        // 135
M=D        // 136
@LCL        // 137
M=M-1        // 138
A=M        // 139
D=M        // 140
@LCL        // 141
M=D        // 142
@R13        // 143
A=M        // 144
0;JMP        // 145
// function Class1.get 0
(Class1.get)
// push static 0
@Class1.0        // 146
D=M        // 147
@SP        // 148
A=M        // 149
M=D        // 150
@SP        // 151
M=M+1        // 152
// push static 1
@Class1.1        // 153
D=M        // 154
@SP        // 155
A=M        // 156
M=D        // 157
@SP        // 158
M=M+1        // 159
// sub
@SP        // 160
M=M-1        // 161
A=M        // 162
D=M        // 163
A=A-1        // 164
M=M-D        // 165
// return
@LCL        // 166
D=M        // 167
@5        // 168
A=D-A        // 169
D=M        // 170
@R13        // 171
M=D        // 172
@SP        // 173
A=M-1        // 174
D=M        // 175
@ARG        // 176
A=M        // 177
M=D        // 178
@ARG        // 179
D=M        // 180
@SP        // 181
M=D+1        // 182
@LCL        // 183
M=M-1        // 184
A=M        // 185
D=M        // 186
@THAT        // 187
M=D        // 188
@LCL        // 189
M=M-1        // 190
A=M        // 191
D=M        // 192
@THIS        // 193
M=D        // 194
@LCL        // 195
M=M-1        // 196
A=M        // 197
D=M        // 198
@ARG        // 199
M=D        // 200
@LCL        // 201
M=M-1        // 202
A=M        // 203
D=M        // 204
@LCL        // 205
M=D        // 206
@R13        // 207
A=M        // 208
0;JMP        // 209
// function Class2.set 0
(Class2.set)
// push argument 0
@0        // 210
D=A        // 211
@ARG        // 212
A=D+M        // 213
D=M        // 214
@SP        // 215
A=M        // 216
M=D        // 217
@SP        // 218
M=M+1        // 219
// pop static 0
@Class2.0        // 220
D=A        // 221
@R13        // 222
M=D        // 223
@SP        // 224
M=M-1        // 225
A=M        // 226
D=M        // 227
@R13        // 228
A=M        // 229
M=D        // 230
// push argument 1
@1        // 231
D=A        // 232
@ARG        // 233
A=D+M        // 234
D=M        // 235
@SP        // 236
A=M        // 237
M=D        // 238
@SP        // 239
M=M+1        // 240
// pop static 1
@Class2.1        // 241
D=A        // 242
@R13        // 243
M=D        // 244
@SP        // 245
M=M-1        // 246
A=M        // 247
D=M        // 248
@R13        // 249
A=M        // 250
M=D        // 251
// push constant 0
@0        // 252
D=A        // 253
@SP        // 254
A=M        // 255
M=D        // 256
@SP        // 257
M=M+1        // 258
// return
@LCL        // 259
D=M        // 260
@5        // 261
A=D-A        // 262
D=M        // 263
@R13        // 264
M=D        // 265
@SP        // 266
A=M-1        // 267
D=M        // 268
@ARG        // 269
A=M        // 270
M=D        // 271
@ARG        // 272
D=M        // 273
@SP        // 274
M=D+1        // 275
@LCL        // 276
M=M-1        // 277
A=M        // 278
D=M        // 279
@THAT        // 280
M=D        // 281
@LCL        // 282
M=M-1        // 283
A=M        // 284
D=M        // 285
@THIS        // 286
M=D        // 287
@LCL        // 288
M=M-1        // 289
A=M        // 290
D=M        // 291
@ARG        // 292
M=D        // 293
@LCL        // 294
M=M-1        // 295
A=M        // 296
D=M        // 297
@LCL        // 298
M=D        // 299
@R13        // 300
A=M        // 301
0;JMP        // 302
// function Class2.get 0
(Class2.get)
// push static 0
@Class2.0        // 303
D=M        // 304
@SP        // 305
A=M        // 306
M=D        // 307
@SP        // 308
M=M+1        // 309
// push static 1
@Class2.1        // 310
D=M        // 311
@SP        // 312
A=M        // 313
M=D        // 314
@SP        // 315
M=M+1        // 316
// sub
@SP        // 317
M=M-1        // 318
A=M        // 319
D=M        // 320
A=A-1        // 321
M=M-D        // 322
// return
@LCL        // 323
D=M        // 324
@5        // 325
A=D-A        // 326
D=M        // 327
@R13        // 328
M=D        // 329
@SP        // 330
A=M-1        // 331
D=M        // 332
@ARG        // 333
A=M        // 334
M=D        // 335
@ARG        // 336
D=M        // 337
@SP        // 338
M=D+1        // 339
@LCL        // 340
M=M-1        // 341
A=M        // 342
D=M        // 343
@THAT        // 344
M=D        // 345
@LCL        // 346
M=M-1        // 347
A=M        // 348
D=M        // 349
@THIS        // 350
M=D        // 351
@LCL        // 352
M=M-1        // 353
A=M        // 354
D=M        // 355
@ARG        // 356
M=D        // 357
@LCL        // 358
M=M-1        // 359
A=M        // 360
D=M        // 361
@LCL        // 362
M=D        // 363
@R13        // 364
A=M        // 365
0;JMP        // 366
// function Sys.init 0
(Sys.init)
// push constant 6
@6        // 367
D=A        // 368
@SP        // 369
A=M        // 370
M=D        // 371
@SP        // 372
M=M+1        // 373
// push constant 8
@8        // 374
D=A        // 375
@SP        // 376
A=M        // 377
M=D        // 378
@SP        // 379
M=M+1        // 380
// call Class1.set 2
@Class1$ret.51        // 381
D=A        // 382
@SP        // 383
A=M        // 384
M=D        // 385
@SP        // 386
M=M+1        // 387
@LCL        // 388
D=M        // 389
@SP        // 390
A=M        // 391
M=D        // 392
@SP        // 393
M=M+1        // 394
@ARG        // 395
D=M        // 396
@SP        // 397
A=M        // 398
M=D        // 399
@SP        // 400
M=M+1        // 401
@THIS        // 402
D=M        // 403
@SP        // 404
A=M        // 405
M=D        // 406
@SP        // 407
M=M+1        // 408
@THAT        // 409
D=M        // 410
@SP        // 411
A=M        // 412
M=D        // 413
@SP        // 414
M=M+1        // 415
@SP        // 416
D=M        // 417
@5        // 418
D=D-A        // 419
@2        // 420
D=D-A        // 421
@ARG        // 422
M=D        // 423
@SP        // 424
D=M        // 425
@LCL        // 426
M=D        // 427
@Class1.set        // 428
0;JMP        // 429
(Class1$ret.51)
// pop temp 0
@R5        // 430
D=A        // 431
@0        // 432
D=D+A        // 433
@R13        // 434
M=D        // 435
@SP        // 436
M=M-1        // 437
A=M        // 438
D=M        // 439
@R13        // 440
A=M        // 441
M=D        // 442
// push constant 23
@23        // 443
D=A        // 444
@SP        // 445
A=M        // 446
M=D        // 447
@SP        // 448
M=M+1        // 449
// push constant 15
@15        // 450
D=A        // 451
@SP        // 452
A=M        // 453
M=D        // 454
@SP        // 455
M=M+1        // 456
// call Class2.set 2
@Class2$ret.55        // 457
D=A        // 458
@SP        // 459
A=M        // 460
M=D        // 461
@SP        // 462
M=M+1        // 463
@LCL        // 464
D=M        // 465
@SP        // 466
A=M        // 467
M=D        // 468
@SP        // 469
M=M+1        // 470
@ARG        // 471
D=M        // 472
@SP        // 473
A=M        // 474
M=D        // 475
@SP        // 476
M=M+1        // 477
@THIS        // 478
D=M        // 479
@SP        // 480
A=M        // 481
M=D        // 482
@SP        // 483
M=M+1        // 484
@THAT        // 485
D=M        // 486
@SP        // 487
A=M        // 488
M=D        // 489
@SP        // 490
M=M+1        // 491
@SP        // 492
D=M        // 493
@5        // 494
D=D-A        // 495
@2        // 496
D=D-A        // 497
@ARG        // 498
M=D        // 499
@SP        // 500
D=M        // 501
@LCL        // 502
M=D        // 503
@Class2.set        // 504
0;JMP        // 505
(Class2$ret.55)
// pop temp 0
@R5        // 506
D=A        // 507
@0        // 508
D=D+A        // 509
@R13        // 510
M=D        // 511
@SP        // 512
M=M-1        // 513
A=M        // 514
D=M        // 515
@R13        // 516
A=M        // 517
M=D        // 518
// call Class1.get 0
@Class1$ret.57        // 519
D=A        // 520
@SP        // 521
A=M        // 522
M=D        // 523
@SP        // 524
M=M+1        // 525
@LCL        // 526
D=M        // 527
@SP        // 528
A=M        // 529
M=D        // 530
@SP        // 531
M=M+1        // 532
@ARG        // 533
D=M        // 534
@SP        // 535
A=M        // 536
M=D        // 537
@SP        // 538
M=M+1        // 539
@THIS        // 540
D=M        // 541
@SP        // 542
A=M        // 543
M=D        // 544
@SP        // 545
M=M+1        // 546
@THAT        // 547
D=M        // 548
@SP        // 549
A=M        // 550
M=D        // 551
@SP        // 552
M=M+1        // 553
@SP        // 554
D=M        // 555
@5        // 556
D=D-A        // 557
@0        // 558
D=D-A        // 559
@ARG        // 560
M=D        // 561
@SP        // 562
D=M        // 563
@LCL        // 564
M=D        // 565
@Class1.get        // 566
0;JMP        // 567
(Class1$ret.57)
// call Class2.get 0
@Class2$ret.58        // 568
D=A        // 569
@SP        // 570
A=M        // 571
M=D        // 572
@SP        // 573
M=M+1        // 574
@LCL        // 575
D=M        // 576
@SP        // 577
A=M        // 578
M=D        // 579
@SP        // 580
M=M+1        // 581
@ARG        // 582
D=M        // 583
@SP        // 584
A=M        // 585
M=D        // 586
@SP        // 587
M=M+1        // 588
@THIS        // 589
D=M        // 590
@SP        // 591
A=M        // 592
M=D        // 593
@SP        // 594
M=M+1        // 595
@THAT        // 596
D=M        // 597
@SP        // 598
A=M        // 599
M=D        // 600
@SP        // 601
M=M+1        // 602
@SP        // 603
D=M        // 604
@5        // 605
D=D-A        // 606
@0        // 607
D=D-A        // 608
@ARG        // 609
M=D        // 610
@SP        // 611
D=M        // 612
@LCL        // 613
M=D        // 614
@Class2.get        // 615
0;JMP        // 616
(Class2$ret.58)
// label WHILE
(WHILE)
// goto WHILE
@WHILE        // 617
0;JMP        // 618
// Program end
(END)
@END        // 619
0;JMP        // 620
